<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Generate Jenkins-Jobs for every GRETL-Job found in the Git repository.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>15</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>jobFilePath</name>
          <description>ANT fileset pattern conventions</description>
          <defaultValue>${GRETL_JOB_FILE_PATH}</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>jobFileName</name>
          <description></description>
          <defaultValue>${GRETL_JOB_FILE_NAME}</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.3.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>${GRETL_JOB_REPO_URL}</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.66">
      <scriptText>
println &quot; BUILD_NUMBER = ${BUILD_NUMBER}&quot;

def base = SEED_JOB.getWorkspace().toString()
println &apos;job base dir: &apos; + base

def jobFileDefinition = &quot;$jobFilePath/$jobFileName&quot;
println &apos;job file definition: &apos; + jobFileDefinition

def pipelineFiles = new FileNameFinder().getFileNames(base, jobFileDefinition)

for (pipelineFil in pipelineFiles) {

  def relativeScriptPath = (pipelineFil - base).substring(1)
  def _jobPath = relativeScriptPath.split(&apos;/&apos;)
  def realJobName = _jobPath[0]

  println &apos;job name: &apos; + realJobName

  def releaseScript = readFileFromWorkspace(pipelineFil)

  pipelineJob(realJobName) {
    definition {
        cps {
            script(releaseScript)
            sandbox()
        }
    }
  }
}
      </scriptText>
      <usingScriptText>true</usingScriptText>
      <sandbox>false</sandbox>
      <ignoreExisting>false</ignoreExisting>
      <ignoreMissingFiles>false</ignoreMissingFiles>
      <failOnMissingPlugin>false</failOnMissingPlugin>
      <unstableOnDeprecation>false</unstableOnDeprecation>
      <removedJobAction>DISABLE</removedJobAction>
      <removedViewAction>IGNORE</removedViewAction>
      <removedConfigFilesAction>IGNORE</removedConfigFilesAction>
      <lookupStrategy>JENKINS_ROOT</lookupStrategy>
    </javaposse.jobdsl.plugin.ExecuteDslScripts>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
